/***************************************************************\
 *     The skeleton of this class is generated by an automatic *
 * code generator for NC product.                              *
\***************************************************************/

package nc.bs.lowcost.cancel;

import java.rmi.*;
import nc.bs.pub.*;
import nc.vo.lowcost.cancel.*;
/**
 * Cancel的BO类
 *
 * 创建日期：(2005-10-7)
 * @author：
 */
public class CancelBO extends BusinessObject {

/**
	 * 
	 */
	private static final long serialVersionUID = 8945802334661944227L;
/**
 * CancelBO 构造子注解。
 */
public CancelBO() {
	super();
}
/**
 * EJB规范中要求的方法。
 *
 * 创建日期：(2005-10-7)
 */
public void ejbCreate() {}
/**
 * 通过主键获得VO对象。
 *
 * 创建日期：(2005-10-7)
 * @return nc.vo.lowcost.cancel.CancelVO
 * @param key String
 * @exception java.rmi.RemoteException 异常说明。
 */
public CancelVO findByPrimaryKey(String key) throws java.rmi.RemoteException {

	CancelVO cancel = null;
	try {
		CancelDMO dmo = new CancelDMO();
		cancel = dmo.findByPrimaryKey(key);
	}
	catch (Exception e) {
		reportException(e);
		throw new RemoteException("CancelBean::findByPrimaryKey(CancelPK) Exception!", e);
	}
	return cancel;
}
/**
 * 向数据库中插入一个VO对象。
 *
 * 创建日期：(2005-10-7)
 * @param cancel nc.vo.lowcost.cancel.CancelVO
 * @return java.lang.String  所插入VO对象的主键字符串。
 * @exception java.rmi.RemoteException 异常说明。
 */
public String insert(CancelVO cancel) throws RemoteException {

	try {
		CancelDMO dmo = new CancelDMO();
		String key = dmo.insert(cancel);
		return key;
	}
	catch (Exception e) {
		reportException(e);
		throw new RemoteException("CancelBO::insert(CancelVO) Exception!", e);
	}
}
/**
 * 根据主键在数据库中删除一个VO对象。
 *
 * 创建日期：(2005-10-7)
 * @param key String
 * @exception java.rmi.RemoteException 异常说明。
 */
public void delete(CancelVO vo) throws java.rmi.RemoteException {

	try {
		CancelDMO dmo = new CancelDMO();
		dmo.delete(vo);
	}
	catch (Exception e) {
		reportException(e);
		throw new RemoteException("CancelBO::delete(CancelPK) Exception!", e);
	}
}
/**
 * 用VO对象的属性值更新数据库。
 *
 * 创建日期：(2005-10-7)
 * @param cancel nc.vo.lowcost.cancel.CancelVO
 * @exception java.rmi.RemoteException 异常说明。
 */
public void update(CancelVO cancel) throws java.rmi.RemoteException {

	try {
		CancelDMO dmo = new CancelDMO();
		dmo.update(cancel);
	}
	catch (Exception e) {
		reportException(e);
		throw new RemoteException("CancelBO::update(CancelVO) Exception!", e);
	}
}
}