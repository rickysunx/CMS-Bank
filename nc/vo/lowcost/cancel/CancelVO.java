/***************************************************************\
 *     The skeleton of this class is generated by an automatic *
 * code generator for NC product.                              *
\***************************************************************/

package nc.vo.lowcost.cancel;

import nc.vo.pub.*;
import nc.vo.pub.pf.IPfBackCheck;
/**
 * Cancel的聚合VO类。
 *
 * 创建日期：(2005-10-7)
 * @author：
 */
public class CancelVO extends AggregatedValueObject implements IPfBackCheck {

	/**
	 * 
	 */
	private static final long serialVersionUID = 7425807881211609455L;
	private CancelHeaderVO header = null;
	private CancelItemVO[] items = null;

	// 时间戳标示，现在暂未使用：
	long currentTimestamp; // 当前时间戳
	long initialTimestamp; // 从数据库读入时获得的时间戳
/**
 * CancelVO 构造子注解。
 */
public CancelVO() {
	super();
}
/**
 * <p>获得子表的VO数组。
 * <p>
 * 创建日期：(2005-10-7)
 * @return nc.vo.pub.CircularlyAccessibleValueObject[]
 */
public CircularlyAccessibleValueObject[] getChildrenVO() {

	return items;
}
/**
 * <p>获得母表的VO。
 * <p>
 * 创建日期：(2005-10-7)
 * @return nc.vo.pub.CircularlyAccessibleValueObject
 */
public CircularlyAccessibleValueObject getParentVO() {

	return header;
}
/**
 * <p>设置子表的VO数组。
 * <p>
 * 创建日期：(2005-10-7)
 * @param children nc.vo.pub.CircularlyAccessibleValueObject[]
 */
public void setChildrenVO(CircularlyAccessibleValueObject[] children) {

	items = (CancelItemVO[]) children;
}
/**
 * <p>设置母表的VO。
 * <p>
 * 创建日期：(2005-10-7)
 * @param parent nc.vo.pub.CircularlyAccessibleValueObject
 */
public void setParentVO(CircularlyAccessibleValueObject parent) {

	header = (CancelHeaderVO) parent;
}
/**
 * 为表头VO设置主键，用来唯一定位对象。
 *
 * 创建日期：(2005-10-7)
 * @param pk_cancel String 
 */
public void setPrimaryKey(String pk_cancel) {

	((CancelHeaderVO)getParentVO()).setPrimaryKey(pk_cancel);
}
}